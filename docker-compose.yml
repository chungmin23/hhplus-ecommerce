version: '3'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # 설정 파일 마운트
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped


#  springboot-app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: springboot-app
#    ports:
#      - "8095:8095"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/hhplus
#      - SPRING_DATASOURCE_USERNAME=application
#      - SPRING_DATASOURCE_PASSWORD=application
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    depends_on:
#      - mysql
#      - kafka
#    restart: unless-stopped


networks:
  default:
    driver: bridge



